import fs from 'node:fs';
import fsp from 'node:fs/promises';

import inquirer from 'inquirer';
import path from 'path';

import { DOT_DEVVIT_DIR_FILENAME } from '../lib/config.js';

const PLAYTEST_LOCKFILE_PATH = path.join(DOT_DEVVIT_DIR_FILENAME, 'active-playtest.json');

/**
 * Remove the lockfile
 */
export async function playLockRemove(): Promise<void> {
  try {
    await fsp.rm(PLAYTEST_LOCKFILE_PATH);
  } catch {
    // no-op
  }
}

/**
 * Write the current PID to the lockfile
 */
export async function playLockWrite(appSlug: string): Promise<void> {
  await fsp.writeFile(
    PLAYTEST_LOCKFILE_PATH,
    JSON.stringify(
      {
        description: 'THIS IS AN AUTOGENERATED FILE by "devvit playtest"',
        createdAt: new Date(),
        pid: process.pid,
        appSlug: appSlug,
      },
      null,
      2 // 2 spaces
    ),
    'utf8'
  );
}

/**
 * Checking if lockfile exists to prevent the user from runing simultaneous playtest sessions.
 */
export async function playLockCheck(): Promise<void> {
  if (fs.existsSync(PLAYTEST_LOCKFILE_PATH)) {
    const { action } = await inquirer.prompt([
      {
        name: 'action',
        message: `Playtest lockfile already exists.
Check if another playtest is already running in a different terminal and stop it first.
Otherwise, you can safely continue`,
        type: 'list',
        choices: [
          {
            name: 'Exit',
            value: 'exit',
          },
          {
            name: 'Continue anyway',
            value: 'continue',
          },
        ],
      },
    ]);

    if (action === 'exit') {
      process.exit(0);
    }
  }
}
